/*
-----------------------------------------------------------------------------
Filename:    SnakesAndLadders.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.8.x Application Wizard for VC10 (May 2012)
      https://bitbucket.org/jacmoe/ogreappwizards
-----------------------------------------------------------------------------
*/
#ifndef __SnakesAndLadders_h_
#define __SnakesAndLadders_h_

#include "BaseApplication.h"


#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#include "../res/resource.h"
#endif

#include "Player.h"
#include "Ai.h"
#include <ctime>
#include "fmod.hpp"
#include "fmod_errors.h"
using namespace std;

class SnakesAndLadders : public BaseApplication
{
public:
    SnakesAndLadders(void);
    virtual ~SnakesAndLadders(void);
	
	
	//Fmod
	FMOD::System *FMODsys;
	FMOD_RESULT result;
	FMOD::Sound *ladderSound;
	FMOD::Sound *snakeSound;
private:
	int rollDie();
	int dieOne;
	int dieTwo;
	int printNumber;
	short humanPlayers;
	short players;
	short turn;
	

	//Container vector for game players
	std::vector<Player* > gamePlayers;

	//in game Snakes
	std::vector<int(*)[2]> snakes;

	//in game Ladders
	int (*ladders)[2];
	
	//Constants
	static float const BOARDER_WIDTH;
	static float const BOARD_WIDTH;
	static float const BOARD_LENGTH;
	static float const MOVE_DISTANCE;
	
protected:
    virtual void createScene(void);
	virtual bool frameRenderingQueued(const Ogre::FrameEvent& evt);
	virtual bool keyPressed( const OIS::KeyEvent &arg );
};

#endif // #ifndef __SnakesAndLadders_h_
